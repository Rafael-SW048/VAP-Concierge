# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import api.proto.app_server_pb2 as app__server__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class PipelineStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDiff = channel.unary_unary(
                '/Pipeline/GetDiff',
                request_serializer=app__server__pb2.ResourceType.SerializeToString,
                response_deserializer=app__server__pb2.Diff.FromString,
                )
        self.NotifyReallocation = channel.unary_unary(
                '/Pipeline/NotifyReallocation',
                request_serializer=app__server__pb2.Notification.SerializeToString,
                response_deserializer=app__server__pb2.IsNotified.FromString,
                )
        self.StartProfile = channel.unary_unary(
                '/Pipeline/StartProfile',
                request_serializer=app__server__pb2.ResourceChange.SerializeToString,
                response_deserializer=app__server__pb2.IsNotified.FromString,
                )
        self.RefillToken = channel.unary_unary(
                '/Pipeline/RefillToken',
                request_serializer=app__server__pb2.NewTokens.SerializeToString,
                response_deserializer=app__server__pb2.IsNotified.FromString,
                )
        self.StartGPUJob = channel.unary_unary(
                '/Pipeline/StartGPUJob',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=app__server__pb2.IsNotified.FromString,
                )
        self.EndInference = channel.unary_unary(
                '/Pipeline/EndInference',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=app__server__pb2.IsNotified.FromString,
                )


class PipelineServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDiff(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyReallocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefillToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartGPUJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndInference(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PipelineServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDiff': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDiff,
                    request_deserializer=app__server__pb2.ResourceType.FromString,
                    response_serializer=app__server__pb2.Diff.SerializeToString,
            ),
            'NotifyReallocation': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyReallocation,
                    request_deserializer=app__server__pb2.Notification.FromString,
                    response_serializer=app__server__pb2.IsNotified.SerializeToString,
            ),
            'StartProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.StartProfile,
                    request_deserializer=app__server__pb2.ResourceChange.FromString,
                    response_serializer=app__server__pb2.IsNotified.SerializeToString,
            ),
            'RefillToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RefillToken,
                    request_deserializer=app__server__pb2.NewTokens.FromString,
                    response_serializer=app__server__pb2.IsNotified.SerializeToString,
            ),
            'StartGPUJob': grpc.unary_unary_rpc_method_handler(
                    servicer.StartGPUJob,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=app__server__pb2.IsNotified.SerializeToString,
            ),
            'EndInference': grpc.unary_unary_rpc_method_handler(
                    servicer.EndInference,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=app__server__pb2.IsNotified.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Pipeline', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Pipeline(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDiff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Pipeline/GetDiff',
            app__server__pb2.ResourceType.SerializeToString,
            app__server__pb2.Diff.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NotifyReallocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Pipeline/NotifyReallocation',
            app__server__pb2.Notification.SerializeToString,
            app__server__pb2.IsNotified.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Pipeline/StartProfile',
            app__server__pb2.ResourceChange.SerializeToString,
            app__server__pb2.IsNotified.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RefillToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Pipeline/RefillToken',
            app__server__pb2.NewTokens.SerializeToString,
            app__server__pb2.IsNotified.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartGPUJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Pipeline/StartGPUJob',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            app__server__pb2.IsNotified.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndInference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Pipeline/EndInference',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            app__server__pb2.IsNotified.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
